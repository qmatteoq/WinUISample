name:  WPF .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: windows-latest  # For a list of available runner types, refer to 
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: WinUISample.sln                                                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Wap_Project_Directory: WinUISample\WinUISample (Package)                                           # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      Wap_Project_Path: WinUISample\WinUISample (Package)\WinUISample (Package).wapproj                  # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1.4.0
      with:
        dotnet-version: 5.0.100-preview.4

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@2008f912f56e61277eefaac6d1888b750582aa16
      
    - name: Build
      run: msbuild $env:Solution_Name /t:Restore /p:Platform=$env:Platform /p:Configuration=$env:Configuration /p:AppxBundle=$env:Appx_Bundle /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxPackageSigningEnabled=false /p:AppInstallerUri=${{env.appInstallerUri}} /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode
      env:
        Appx_Bundle: Never
        Appx_Bundle_Platforms: x86
        Appx_Package_Build_Mode: SideloadOnly
        Configuration: Release
        Platform: x86
    
    - name: Install AzureSignTool
      run: dotnet tool install --global AzureSignTool --version 2.0.17
       
    - name: Sign package
      run: |
            Get-ChildItem -recurse -Include *.msix | ForEach-Object {
            $msixPath = $_.FullName
            & AzureSignTool sign -kvu "${{ secrets.AzureKeyVaultUrl}}" -kvi "${{ secrets.AzureClientId }}" -kvs "${{ secrets.AzureClientSecret }}" -kvc ${{ secrets.AzureKeyVaultName}} -tr http://timestamp.digicert.com -v $msixPath
            }     
    
    # Upload the MSIX package: https://github.com/marketplace/actions/upload-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v1
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
